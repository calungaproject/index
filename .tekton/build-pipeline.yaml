apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: build
spec:
  description: |
    This pipeline is ideal for building container images from a Containerfile while maintaining trust after pipeline customization.

    _Uses `buildah` to create a container image leveraging [trusted artifacts](https://konflux-ci.dev/architecture/ADR/0036-trusted-artifacts.html). It also optionally creates a source image and runs some build-time tests. Information is shared between tasks using OCI artifacts instead of PVCs. EC will pass the [`trusted_task.trusted`](https://conforma.dev/docs/policy/packages/release_trusted_task.html#trusted_task__trusted) policy as long as all data used to build the artifact is generated from trusted tasks.
    This pipeline is pushed as a Tekton bundle to [quay.io](https://quay.io/repository/konflux-ci/tekton-catalog/pipeline-docker-build-oci-ta?tab=tags)_
  params:
    - description: Source Repository URL
      name: git-url
      type: string
    - default: ""
      description: Revision of the Source Repository
      name: revision
      type: string
    - description: Fully Qualified Output Image
      name: output-image
      type: string
    - default: .
      description: Path to the source code of an application's component from where to build image.
      name: path-context
      type: string
    - default: Dockerfile
      description: Path to the Dockerfile inside the context specified by parameter path-context
      name: dockerfile
      type: string
    - default: "false"
      description: Force rebuild image
      name: rebuild
      type: string
    - default: "false"
      description: Skip checks against built image
      name: skip-checks
      type: string
    - default: "false"
      description: Execute the build with network isolation
      name: hermetic
      type: string
    - default: ""
      description: Build dependencies to be prefetched
      name: prefetch-input
      type: string
    - default: ""
      description: Image tag expiration time, time values could be something like 1h, 2d, 3w for hours, days, and weeks, respectively.
      name: image-expires-after
      type: string
    - default: "false"
      description: Add built image into an OCI image index
      name: build-image-index
      type: string
    - default: []
      description: Array of --build-arg values ("arg=value" strings) for buildah
      name: build-args
      type: array
    - default: ""
      description: Path to a file with build arguments for buildah, see https://www.mankier.com/1/buildah-build#--build-arg-file
      name: build-args-file
      type: string
    - default: "false"
      description: Whether to enable privileged mode, should be used only with remote VMs
      name: privileged-nested
      type: string
    - description: Git ref to use for comparing packages.txt file
      name: prev-packages-ref
      type: string
    - default: "1"
      descripton: Git clone depth
      name: git-clone-depth
      type: string
  results:
    - description: ""
      name: IMAGE_URL
      value: $(tasks.build-wheels.results.IMAGE_URL)
    - description: ""
      name: IMAGE_DIGEST
      value: $(tasks.build-wheels.results.IMAGE_DIGEST)
    - description: ""
      name: CHAINS-GIT_URL
      value: $(tasks.clone-repository.results.url)
    - description: ""
      name: CHAINS-GIT_COMMIT
      value: $(tasks.clone-repository.results.commit)
  tasks:
    - name: init
      params:
        - name: image-url
          value: $(params.output-image)
        - name: rebuild
          value: $(params.rebuild)
        - name: skip-checks
          value: $(params.skip-checks)
      taskRef:
        params:
          - name: name
            value: init
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:ec962d0be18f36ca7d331c99bf243800f569fc0a2ea6f8c8c3d3a574b71c44dc
          - name: kind
            value: task
        resolver: bundles
    - name: clone-repository
      params:
        - name: url
          value: $(params.git-url)
        - name: revision
          value: $(params.revision)
        - name: fetchTags
          value: "true"
        - name: depth
          value: $(params.git-clone-depth)
        - name: ociStorage
          value: $(params.output-image).git
        - name: ociArtifactExpiresAfter
          value: $(params.image-expires-after)
      taskRef:
        params:
          - name: name
            value: git-clone-oci-ta
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta:0.1@sha256:efcce59f226b1426f7685917e41a50b73478f38fe9ac56c98f1e961effd4b6f0
          - name: kind
            value: task
        resolver: bundles
      when:
        - input: $(tasks.init.results.build)
          operator: in
          values:
            - "true"
      workspaces:
        - name: basic-auth
          workspace: git-auth
    - name: identify-packages
      params:
        - name: SOURCE_ARTIFACT
          value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
        - name: SCRIPT
          # SCRIPT_OUTPUT_ARRAY and SCRIPT_OUTPUT env vars are injected by the run-script Task
          value: |
            ./hack/identify-packages packages.txt '$(params.prev-packages-ref)' "${SCRIPT_OUTPUT_ARRAY}" "${SCRIPT_OUTPUT}"
        - name: SCRIPT_RUNNER_IMAGE
          value: registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel9:v1.19.3
        - name: HERMETIC
          value: "true"
        - name: ociStorage
          value: $(params.output-image).pkgs
        - name: ociArtifactExpiresAfter
          value: $(params.image-expires-after)
      taskRef:
        params:
          - name: name
            value: run-script-oci-ta
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-run-script-oci-ta:0.1@sha256:f9da978968a256edbefdbe615ae2fdc2652f81e9ea325a07e2e1c1fa45f52b9b
          - name: kind
            value: task
        resolver: bundles
    - name: build-wheels
      params:
        # TODO: We probably want identify-packages to create a file, and we can use that as the
        # input for build-wheels. Must change the build-wheels script to accept a packages file
        # instead.
        - name: PACKAGES
          value: $(tasks.identify-packages.results.SCRIPT_OUTPUT_ARRAY)
        - name: IMAGE
          value: $(params.output-image).wheel
        - name: IMAGE_EXPIRES_AFTER
          value: $(params.image-expires-after)
        - name: SOURCE_ARTIFACT
          value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
        - name: FROMAGER_IMAGE
          value: quay.io/redhat-user-workloads/calunga-tenant/plumbing-builder:2d1315d872c465082597f8177575aa9ff7d5dc8f
      taskRef:
        params:
          - name: url
            value: https://github.com/calungaproject/plumbing.git
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/build-python-wheels-oci-ta.yaml
        resolver: git
      when:
        - input: "$(tasks.identify-packages.results.SCRIPT_OUTPUT)"
          operator: in
          values: ["has-packages"]
    - name: sast-snyk-check
      params:
        - name: image-digest
          value: $(tasks.build-wheels.results.IMAGE_DIGEST)
        - name: image-url
          value: $(tasks.build-wheels.results.IMAGE_URL)
        - name: SOURCE_ARTIFACT
          value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      taskRef:
        params:
          - name: name
            value: sast-snyk-check-oci-ta
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check-oci-ta:0.4@sha256:783f5de1b4def2fb3fad20b914f4b3afee46ffb8f652114946e321ef3fa86449
          - name: kind
            value: task
        resolver: bundles
      when:
        - input: $(params.skip-checks)
          operator: in
          values:
            - "false"
    - name: sast-coverity-check
      params:
        - name: image-digest
          value: $(tasks.build-wheels.results.IMAGE_DIGEST)
        - name: image-url
          value: $(tasks.build-wheels.results.IMAGE_URL)
        - name: IMAGE
          value: $(params.output-image)
        - name: DOCKERFILE
          value: $(params.dockerfile)
        - name: CONTEXT
          value: $(params.path-context)
        - name: HERMETIC
          value: $(params.hermetic)
        - name: PREFETCH_INPUT
          value: $(params.prefetch-input)
        - name: IMAGE_EXPIRES_AFTER
          value: $(params.image-expires-after)
        - name: COMMIT_SHA
          value: $(tasks.clone-repository.results.commit)
        - name: BUILD_ARGS
          value:
            - $(params.build-args[*])
        - name: BUILD_ARGS_FILE
          value: $(params.build-args-file)
        - name: SOURCE_ARTIFACT
          value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      taskRef:
        params:
          - name: name
            value: sast-coverity-check-oci-ta
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-sast-coverity-check-oci-ta:0.3@sha256:cdbe1a968676e4f5519b082bf1e27a4cdcf66dd60af66dbc26b3e604f957f7e9
          - name: kind
            value: task
        resolver: bundles
      when:
        - input: $(params.skip-checks)
          operator: in
          values:
            - "false"
        - input: $(tasks.coverity-availability-check.results.STATUS)
          operator: in
          values:
            - success
    - name: coverity-availability-check
      taskRef:
        params:
          - name: name
            value: coverity-availability-check
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-coverity-availability-check:0.2@sha256:db2b267dc15e4ed17f704ee91b8e9b38068e1a35b1018a328fdca621819d74c6
          - name: kind
            value: task
        resolver: bundles
      when:
        - input: $(params.skip-checks)
          operator: in
          values:
            - "false"
    - name: sast-shell-check
      params:
        - name: image-digest
          value: $(tasks.build-wheels.results.IMAGE_DIGEST)
        - name: image-url
          value: $(tasks.build-wheels.results.IMAGE_URL)
        - name: SOURCE_ARTIFACT
          value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      taskRef:
        params:
          - name: name
            value: sast-shell-check-oci-ta
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-sast-shell-check-oci-ta:0.1@sha256:bf7bdde00b7212f730c1356672290af6f38d070da2c8a316987b5c32fd49e0b9
          - name: kind
            value: task
        resolver: bundles
      when:
        - input: $(params.skip-checks)
          operator: in
          values:
            - "false"
    - name: sast-unicode-check
      params:
        - name: image-digest
          value: $(tasks.build-wheels.results.IMAGE_DIGEST)
        - name: image-url
          value: $(tasks.build-wheels.results.IMAGE_URL)
        - name: SOURCE_ARTIFACT
          value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
      taskRef:
        params:
          - name: name
            value: sast-unicode-check-oci-ta
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-sast-unicode-check-oci-ta:0.3@sha256:a2bde66f6b4164620298c7d709b8f08515409404000fa1dc2260d2508b135651
          - name: kind
            value: task
        resolver: bundles
      when:
        - input: $(params.skip-checks)
          operator: in
          values:
            - "false"
  workspaces:
    - name: git-auth
      optional: true
    - name: netrc
      optional: true
